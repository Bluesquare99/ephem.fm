{"mappings":"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","sources":["src/js/config.js","src/js/model.js","src/js/views/View.js","src/js/views/weatherView.js","node_modules/chroma-js/chroma.js","src/js/views/audioView.js","src/js/views/iconView.js","src/js/controller.js"],"sourcesContent":["export const API_WEATHER_URL =\n  \"https://api.openweathermap.org/data/2.5/weather?\";\nexport const API_WEATHER_KEY = \"effae31f7bfb25c7219c16a6f16eab0f\";\nexport const MINUTES = 1000 * 60;\n","import { API_WEATHER_URL, API_WEATHER_KEY, MINUTES } from \"./config.js\";\nimport * as helpers from \"./helpers.js\";\n\nexport const state = {};\n\nexport const stations = {\n  fbi: {\n    name: \"fbi\",\n    city: \"Sydney, Australia\",\n    coordinates: [-33.5346, 151.12],\n    streamingUrl: \"https://streamer.fbiradio.com/stream\",\n  },\n  kutx: {\n    name: \"kutx\",\n    city: \"Austin, Texas, United States of America\",\n    coordinates: [30.1721, -97.4402],\n    streamingUrl: \"https://kut.streamguys1.com/kutx-web\",\n  },\n  cism: {\n    name: \"cism\",\n    city: \"Montreal, Quebec, Canada\",\n    coordinates: [45.3023, -73.3644],\n    streamingUrl: \"https://stream03.ustream.ca/cism128.mp3\",\n  },\n};\n\nexport const updateWeather = async function (station) {\n  try {\n    const [lat, lng] = stations[station].coordinates;\n    const url = `${API_WEATHER_URL}lat=${lat}&lon=${lng}&appid=${API_WEATHER_KEY}&units=imperial`;\n\n    const data = await fetch(url);\n    const weather = await data.json();\n\n    return weather;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const checkWeather = async function (station) {\n  try {\n    console.log(\"Checking weather!\");\n    const needsUpdate = false;\n\n    const prev = state;\n    console.log(\"prev\", prev.weather);\n    const cur = await updateWeather(state.station);\n    console.log(\"cur\", cur);\n\n    if (\n      prev.weather.wind.speed !== cur.wind.speed ||\n      prev.weather.wind.dir !== cur.wind.dir ||\n      prev.weather.main.temp !== cur.main.temp ||\n      prev.weather.weather[0].description !== cur.weather[0].description\n    ) {\n      console.log(\"Changing now\");\n      needsUpdate = true;\n    } else console.log(`They were same at ${Date.now()}`);\n\n    return needsUpdate;\n  } catch (err) {\n    console.error(err);\n  }\n};\n","export default class View {\n  _data;\n\n  render(station, weather, render = true) {\n    this._station = station;\n    this._weather = weather;\n    const markup = this._generateMarkup();\n\n    if (!render) return markup;\n\n    this._clear();\n    this._parentEl.insertAdjacentHTML(\"afterbegin\", markup);\n  }\n\n  _clear() {\n    this._parentEl.innerHTML = \"\";\n  }\n}\n","import View from \"./View.js\";\n\nclass WeatherView extends View {\n  _parentEl = document.querySelector(\".weather-display\");\n\n  _generateMarkup() {\n    const description = `In ${this._station.city}, the temperature is ${this._weather.main.temp} Fahrenheit.  There are ${this._weather.weather[0].description}.  The wind's blowing at ${this._weather.wind.speed} at direction of ${this._weather.wind.deg} degrees.`;\n    const weatherIcon = `http://openweathermap.org/img/wn/03n@2x.png`;\n\n    return `\n      <img src=\"${weatherIcon}\" />\n      <p>${description}</p>\n    `;\n  }\n}\n\nexport default new WeatherView();\n","/**\n * chroma.js - JavaScript library for color conversions\n *\n * Copyright (c) 2011-2019, Gregor Aisch\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. The name Gregor Aisch may not be used to endorse or promote products\n * derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * -------------------------------------------------------\n *\n * chroma.js includes colors from colorbrewer2.org, which are released under\n * the following license:\n *\n * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,\n * and The Pennsylvania State University.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific\n * language governing permissions and limitations under the License.\n *\n * ------------------------------------------------------\n *\n * Named colors are taken from X11 Color Names.\n * http://www.w3.org/TR/css3-color/#svg-color\n *\n * @preserve\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.chroma = factory());\n}(this, (function () { 'use strict';\n\n    var limit = function (x, min, max) {\n        if ( min === void 0 ) min=0;\n        if ( max === void 0 ) max=1;\n\n        return x < min ? min : x > max ? max : x;\n    };\n\n    var clip_rgb = function (rgb) {\n        rgb._clipped = false;\n        rgb._unclipped = rgb.slice(0);\n        for (var i=0; i<=3; i++) {\n            if (i < 3) {\n                if (rgb[i] < 0 || rgb[i] > 255) { rgb._clipped = true; }\n                rgb[i] = limit(rgb[i], 0, 255);\n            } else if (i === 3) {\n                rgb[i] = limit(rgb[i], 0, 1);\n            }\n        }\n        return rgb;\n    };\n\n    // ported from jQuery's $.type\n    var classToType = {};\n    for (var i = 0, list = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'RegExp', 'Undefined', 'Null']; i < list.length; i += 1) {\n        var name = list[i];\n\n        classToType[(\"[object \" + name + \"]\")] = name.toLowerCase();\n    }\n    var type = function(obj) {\n        return classToType[Object.prototype.toString.call(obj)] || \"object\";\n    };\n\n    var unpack = function (args, keyOrder) {\n        if ( keyOrder === void 0 ) keyOrder=null;\n\n    \t// if called with more than 3 arguments, we return the arguments\n        if (args.length >= 3) { return Array.prototype.slice.call(args); }\n        // with less than 3 args we check if first arg is object\n        // and use the keyOrder string to extract and sort properties\n    \tif (type(args[0]) == 'object' && keyOrder) {\n    \t\treturn keyOrder.split('')\n    \t\t\t.filter(function (k) { return args[0][k] !== undefined; })\n    \t\t\t.map(function (k) { return args[0][k]; });\n    \t}\n    \t// otherwise we just return the first argument\n    \t// (which we suppose is an array of args)\n        return args[0];\n    };\n\n    var last = function (args) {\n        if (args.length < 2) { return null; }\n        var l = args.length-1;\n        if (type(args[l]) == 'string') { return args[l].toLowerCase(); }\n        return null;\n    };\n\n    var PI = Math.PI;\n\n    var utils = {\n    \tclip_rgb: clip_rgb,\n    \tlimit: limit,\n    \ttype: type,\n    \tunpack: unpack,\n    \tlast: last,\n    \tPI: PI,\n    \tTWOPI: PI*2,\n    \tPITHIRD: PI/3,\n    \tDEG2RAD: PI / 180,\n    \tRAD2DEG: 180 / PI\n    };\n\n    var input = {\n    \tformat: {},\n    \tautodetect: []\n    };\n\n    var last$1 = utils.last;\n    var clip_rgb$1 = utils.clip_rgb;\n    var type$1 = utils.type;\n\n\n    var Color = function Color() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var me = this;\n        if (type$1(args[0]) === 'object' &&\n            args[0].constructor &&\n            args[0].constructor === this.constructor) {\n            // the argument is already a Color instance\n            return args[0];\n        }\n\n        // last argument could be the mode\n        var mode = last$1(args);\n        var autodetect = false;\n\n        if (!mode) {\n            autodetect = true;\n            if (!input.sorted) {\n                input.autodetect = input.autodetect.sort(function (a,b) { return b.p - a.p; });\n                input.sorted = true;\n            }\n            // auto-detect format\n            for (var i = 0, list = input.autodetect; i < list.length; i += 1) {\n                var chk = list[i];\n\n                mode = chk.test.apply(chk, args);\n                if (mode) { break; }\n            }\n        }\n\n        if (input.format[mode]) {\n            var rgb = input.format[mode].apply(null, autodetect ? args : args.slice(0,-1));\n            me._rgb = clip_rgb$1(rgb);\n        } else {\n            throw new Error('unknown format: '+args);\n        }\n\n        // add alpha channel\n        if (me._rgb.length === 3) { me._rgb.push(1); }\n    };\n\n    Color.prototype.toString = function toString () {\n        if (type$1(this.hex) == 'function') { return this.hex(); }\n        return (\"[\" + (this._rgb.join(',')) + \"]\");\n    };\n\n    var Color_1 = Color;\n\n    var chroma = function () {\n    \tvar args = [], len = arguments.length;\n    \twhile ( len-- ) args[ len ] = arguments[ len ];\n\n    \treturn new (Function.prototype.bind.apply( chroma.Color, [ null ].concat( args) ));\n    };\n\n    chroma.Color = Color_1;\n    chroma.version = '2.1.2';\n\n    var chroma_1 = chroma;\n\n    var unpack$1 = utils.unpack;\n    var max = Math.max;\n\n    var rgb2cmyk = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$1(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r = r / 255;\n        g = g / 255;\n        b = b / 255;\n        var k = 1 - max(r,max(g,b));\n        var f = k < 1 ? 1 / (1-k) : 0;\n        var c = (1-r-k) * f;\n        var m = (1-g-k) * f;\n        var y = (1-b-k) * f;\n        return [c,m,y,k];\n    };\n\n    var rgb2cmyk_1 = rgb2cmyk;\n\n    var unpack$2 = utils.unpack;\n\n    var cmyk2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$2(args, 'cmyk');\n        var c = args[0];\n        var m = args[1];\n        var y = args[2];\n        var k = args[3];\n        var alpha = args.length > 4 ? args[4] : 1;\n        if (k === 1) { return [0,0,0,alpha]; }\n        return [\n            c >= 1 ? 0 : 255 * (1-c) * (1-k), // r\n            m >= 1 ? 0 : 255 * (1-m) * (1-k), // g\n            y >= 1 ? 0 : 255 * (1-y) * (1-k), // b\n            alpha\n        ];\n    };\n\n    var cmyk2rgb_1 = cmyk2rgb;\n\n    var unpack$3 = utils.unpack;\n    var type$2 = utils.type;\n\n\n\n    Color_1.prototype.cmyk = function() {\n        return rgb2cmyk_1(this._rgb);\n    };\n\n    chroma_1.cmyk = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['cmyk']) ));\n    };\n\n    input.format.cmyk = cmyk2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$3(args, 'cmyk');\n            if (type$2(args) === 'array' && args.length === 4) {\n                return 'cmyk';\n            }\n        }\n    });\n\n    var unpack$4 = utils.unpack;\n    var last$2 = utils.last;\n    var rnd = function (a) { return Math.round(a*100)/100; };\n\n    /*\n     * supported arguments:\n     * - hsl2css(h,s,l)\n     * - hsl2css(h,s,l,a)\n     * - hsl2css([h,s,l], mode)\n     * - hsl2css([h,s,l,a], mode)\n     * - hsl2css({h,s,l,a}, mode)\n     */\n    var hsl2css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hsla = unpack$4(args, 'hsla');\n        var mode = last$2(args) || 'lsa';\n        hsla[0] = rnd(hsla[0] || 0);\n        hsla[1] = rnd(hsla[1]*100) + '%';\n        hsla[2] = rnd(hsla[2]*100) + '%';\n        if (mode === 'hsla' || (hsla.length > 3 && hsla[3]<1)) {\n            hsla[3] = hsla.length > 3 ? hsla[3] : 1;\n            mode = 'hsla';\n        } else {\n            hsla.length = 3;\n        }\n        return (mode + \"(\" + (hsla.join(',')) + \")\");\n    };\n\n    var hsl2css_1 = hsl2css;\n\n    var unpack$5 = utils.unpack;\n\n    /*\n     * supported arguments:\n     * - rgb2hsl(r,g,b)\n     * - rgb2hsl(r,g,b,a)\n     * - rgb2hsl([r,g,b])\n     * - rgb2hsl([r,g,b,a])\n     * - rgb2hsl({r,g,b,a})\n     */\n    var rgb2hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$5(args, 'rgba');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n\n        r /= 255;\n        g /= 255;\n        b /= 255;\n\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n\n        var l = (max + min) / 2;\n        var s, h;\n\n        if (max === min){\n            s = 0;\n            h = Number.NaN;\n        } else {\n            s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n        }\n\n        if (r == max) { h = (g - b) / (max - min); }\n        else if (g == max) { h = 2 + (b - r) / (max - min); }\n        else if (b == max) { h = 4 + (r - g) / (max - min); }\n\n        h *= 60;\n        if (h < 0) { h += 360; }\n        if (args.length>3 && args[3]!==undefined) { return [h,s,l,args[3]]; }\n        return [h,s,l];\n    };\n\n    var rgb2hsl_1 = rgb2hsl;\n\n    var unpack$6 = utils.unpack;\n    var last$3 = utils.last;\n\n\n    var round = Math.round;\n\n    /*\n     * supported arguments:\n     * - rgb2css(r,g,b)\n     * - rgb2css(r,g,b,a)\n     * - rgb2css([r,g,b], mode)\n     * - rgb2css([r,g,b,a], mode)\n     * - rgb2css({r,g,b,a}, mode)\n     */\n    var rgb2css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$6(args, 'rgba');\n        var mode = last$3(args) || 'rgb';\n        if (mode.substr(0,3) == 'hsl') {\n            return hsl2css_1(rgb2hsl_1(rgba), mode);\n        }\n        rgba[0] = round(rgba[0]);\n        rgba[1] = round(rgba[1]);\n        rgba[2] = round(rgba[2]);\n        if (mode === 'rgba' || (rgba.length > 3 && rgba[3]<1)) {\n            rgba[3] = rgba.length > 3 ? rgba[3] : 1;\n            mode = 'rgba';\n        }\n        return (mode + \"(\" + (rgba.slice(0,mode==='rgb'?3:4).join(',')) + \")\");\n    };\n\n    var rgb2css_1 = rgb2css;\n\n    var unpack$7 = utils.unpack;\n    var round$1 = Math.round;\n\n    var hsl2rgb = function () {\n        var assign;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$7(args, 'hsl');\n        var h = args[0];\n        var s = args[1];\n        var l = args[2];\n        var r,g,b;\n        if (s === 0) {\n            r = g = b = l*255;\n        } else {\n            var t3 = [0,0,0];\n            var c = [0,0,0];\n            var t2 = l < 0.5 ? l * (1+s) : l+s-l*s;\n            var t1 = 2 * l - t2;\n            var h_ = h / 360;\n            t3[0] = h_ + 1/3;\n            t3[1] = h_;\n            t3[2] = h_ - 1/3;\n            for (var i=0; i<3; i++) {\n                if (t3[i] < 0) { t3[i] += 1; }\n                if (t3[i] > 1) { t3[i] -= 1; }\n                if (6 * t3[i] < 1)\n                    { c[i] = t1 + (t2 - t1) * 6 * t3[i]; }\n                else if (2 * t3[i] < 1)\n                    { c[i] = t2; }\n                else if (3 * t3[i] < 2)\n                    { c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6; }\n                else\n                    { c[i] = t1; }\n            }\n            (assign = [round$1(c[0]*255),round$1(c[1]*255),round$1(c[2]*255)], r = assign[0], g = assign[1], b = assign[2]);\n        }\n        if (args.length > 3) {\n            // keep alpha channel\n            return [r,g,b,args[3]];\n        }\n        return [r,g,b,1];\n    };\n\n    var hsl2rgb_1 = hsl2rgb;\n\n    var RE_RGB = /^rgb\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*\\)$/;\n    var RE_RGBA = /^rgba\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_RGB_PCT = /^rgb\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_RGBA_PCT = /^rgba\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_HSL = /^hsl\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_HSLA = /^hsla\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n\n    var round$2 = Math.round;\n\n    var css2rgb = function (css) {\n        css = css.toLowerCase().trim();\n        var m;\n\n        if (input.format.named) {\n            try {\n                return input.format.named(css);\n            } catch (e) {\n                // eslint-disable-next-line\n            }\n        }\n\n        // rgb(250,20,0)\n        if ((m = css.match(RE_RGB))) {\n            var rgb = m.slice(1,4);\n            for (var i=0; i<3; i++) {\n                rgb[i] = +rgb[i];\n            }\n            rgb[3] = 1;  // default alpha\n            return rgb;\n        }\n\n        // rgba(250,20,0,0.4)\n        if ((m = css.match(RE_RGBA))) {\n            var rgb$1 = m.slice(1,5);\n            for (var i$1=0; i$1<4; i$1++) {\n                rgb$1[i$1] = +rgb$1[i$1];\n            }\n            return rgb$1;\n        }\n\n        // rgb(100%,0%,0%)\n        if ((m = css.match(RE_RGB_PCT))) {\n            var rgb$2 = m.slice(1,4);\n            for (var i$2=0; i$2<3; i$2++) {\n                rgb$2[i$2] = round$2(rgb$2[i$2] * 2.55);\n            }\n            rgb$2[3] = 1;  // default alpha\n            return rgb$2;\n        }\n\n        // rgba(100%,0%,0%,0.4)\n        if ((m = css.match(RE_RGBA_PCT))) {\n            var rgb$3 = m.slice(1,5);\n            for (var i$3=0; i$3<3; i$3++) {\n                rgb$3[i$3] = round$2(rgb$3[i$3] * 2.55);\n            }\n            rgb$3[3] = +rgb$3[3];\n            return rgb$3;\n        }\n\n        // hsl(0,100%,50%)\n        if ((m = css.match(RE_HSL))) {\n            var hsl = m.slice(1,4);\n            hsl[1] *= 0.01;\n            hsl[2] *= 0.01;\n            var rgb$4 = hsl2rgb_1(hsl);\n            rgb$4[3] = 1;\n            return rgb$4;\n        }\n\n        // hsla(0,100%,50%,0.5)\n        if ((m = css.match(RE_HSLA))) {\n            var hsl$1 = m.slice(1,4);\n            hsl$1[1] *= 0.01;\n            hsl$1[2] *= 0.01;\n            var rgb$5 = hsl2rgb_1(hsl$1);\n            rgb$5[3] = +m[4];  // default alpha = 1\n            return rgb$5;\n        }\n    };\n\n    css2rgb.test = function (s) {\n        return RE_RGB.test(s) ||\n            RE_RGBA.test(s) ||\n            RE_RGB_PCT.test(s) ||\n            RE_RGBA_PCT.test(s) ||\n            RE_HSL.test(s) ||\n            RE_HSLA.test(s);\n    };\n\n    var css2rgb_1 = css2rgb;\n\n    var type$3 = utils.type;\n\n\n\n\n    Color_1.prototype.css = function(mode) {\n        return rgb2css_1(this._rgb, mode);\n    };\n\n    chroma_1.css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['css']) ));\n    };\n\n    input.format.css = css2rgb_1;\n\n    input.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$3(h) === 'string' && css2rgb_1.test(h)) {\n                return 'css';\n            }\n        }\n    });\n\n    var unpack$8 = utils.unpack;\n\n    input.format.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$8(args, 'rgba');\n        rgb[0] *= 255;\n        rgb[1] *= 255;\n        rgb[2] *= 255;\n        return rgb;\n    };\n\n    chroma_1.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['gl']) ));\n    };\n\n    Color_1.prototype.gl = function() {\n        var rgb = this._rgb;\n        return [rgb[0]/255, rgb[1]/255, rgb[2]/255, rgb[3]];\n    };\n\n    var unpack$9 = utils.unpack;\n\n    var rgb2hcg = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$9(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n        var delta = max - min;\n        var c = delta * 100 / 255;\n        var _g = min / (255 - delta) * 100;\n        var h;\n        if (delta === 0) {\n            h = Number.NaN;\n        } else {\n            if (r === max) { h = (g - b) / delta; }\n            if (g === max) { h = 2+(b - r) / delta; }\n            if (b === max) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, c, _g];\n    };\n\n    var rgb2hcg_1 = rgb2hcg;\n\n    var unpack$a = utils.unpack;\n    var floor = Math.floor;\n\n    /*\n     * this is basically just HSV with some minor tweaks\n     *\n     * hue.. [0..360]\n     * chroma .. [0..1]\n     * grayness .. [0..1]\n     */\n\n    var hcg2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$a(args, 'hcg');\n        var h = args[0];\n        var c = args[1];\n        var _g = args[2];\n        var r,g,b;\n        _g = _g * 255;\n        var _c = c * 255;\n        if (c === 0) {\n            r = g = b = _g;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n            var i = floor(h);\n            var f = h - i;\n            var p = _g * (1 - c);\n            var q = p + _c * (1 - f);\n            var t = p + _c * f;\n            var v = p + _c;\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var hcg2rgb_1 = hcg2rgb;\n\n    var unpack$b = utils.unpack;\n    var type$4 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hcg = function() {\n        return rgb2hcg_1(this._rgb);\n    };\n\n    chroma_1.hcg = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hcg']) ));\n    };\n\n    input.format.hcg = hcg2rgb_1;\n\n    input.autodetect.push({\n        p: 1,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$b(args, 'hcg');\n            if (type$4(args) === 'array' && args.length === 3) {\n                return 'hcg';\n            }\n        }\n    });\n\n    var unpack$c = utils.unpack;\n    var last$4 = utils.last;\n    var round$3 = Math.round;\n\n    var rgb2hex = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$c(args, 'rgba');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var a = ref[3];\n        var mode = last$4(args) || 'auto';\n        if (a === undefined) { a = 1; }\n        if (mode === 'auto') {\n            mode = a < 1 ? 'rgba' : 'rgb';\n        }\n        r = round$3(r);\n        g = round$3(g);\n        b = round$3(b);\n        var u = r << 16 | g << 8 | b;\n        var str = \"000000\" + u.toString(16); //#.toUpperCase();\n        str = str.substr(str.length - 6);\n        var hxa = '0' + round$3(a * 255).toString(16);\n        hxa = hxa.substr(hxa.length - 2);\n        switch (mode.toLowerCase()) {\n            case 'rgba': return (\"#\" + str + hxa);\n            case 'argb': return (\"#\" + hxa + str);\n            default: return (\"#\" + str);\n        }\n    };\n\n    var rgb2hex_1 = rgb2hex;\n\n    var RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\n    var RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/;\n\n    var hex2rgb = function (hex) {\n        if (hex.match(RE_HEX)) {\n            // remove optional leading #\n            if (hex.length === 4 || hex.length === 7) {\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full six-digit\n            if (hex.length === 3) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2];\n            }\n            var u = parseInt(hex, 16);\n            var r = u >> 16;\n            var g = u >> 8 & 0xFF;\n            var b = u & 0xFF;\n            return [r,g,b,1];\n        }\n\n        // match rgba hex format, eg #FF000077\n        if (hex.match(RE_HEXA)) {\n            if (hex.length === 5 || hex.length === 9) {\n                // remove optional leading #\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full eight-digit\n            if (hex.length === 4) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2]+hex[3]+hex[3];\n            }\n            var u$1 = parseInt(hex, 16);\n            var r$1 = u$1 >> 24 & 0xFF;\n            var g$1 = u$1 >> 16 & 0xFF;\n            var b$1 = u$1 >> 8 & 0xFF;\n            var a = Math.round((u$1 & 0xFF) / 0xFF * 100) / 100;\n            return [r$1,g$1,b$1,a];\n        }\n\n        // we used to check for css colors here\n        // if _input.css? and rgb = _input.css hex\n        //     return rgb\n\n        throw new Error((\"unknown hex color: \" + hex));\n    };\n\n    var hex2rgb_1 = hex2rgb;\n\n    var type$5 = utils.type;\n\n\n\n\n    Color_1.prototype.hex = function(mode) {\n        return rgb2hex_1(this._rgb, mode);\n    };\n\n    chroma_1.hex = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hex']) ));\n    };\n\n    input.format.hex = hex2rgb_1;\n    input.autodetect.push({\n        p: 4,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$5(h) === 'string' && [3,4,5,6,7,8,9].indexOf(h.length) >= 0) {\n                return 'hex';\n            }\n        }\n    });\n\n    var unpack$d = utils.unpack;\n    var TWOPI = utils.TWOPI;\n    var min = Math.min;\n    var sqrt = Math.sqrt;\n    var acos = Math.acos;\n\n    var rgb2hsi = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n        */\n        var ref = unpack$d(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r /= 255;\n        g /= 255;\n        b /= 255;\n        var h;\n        var min_ = min(r,g,b);\n        var i = (r+g+b) / 3;\n        var s = i > 0 ? 1 - min_/i : 0;\n        if (s === 0) {\n            h = NaN;\n        } else {\n            h = ((r-g)+(r-b)) / 2;\n            h /= sqrt((r-g)*(r-g) + (r-b)*(g-b));\n            h = acos(h);\n            if (b > g) {\n                h = TWOPI - h;\n            }\n            h /= TWOPI;\n        }\n        return [h*360,s,i];\n    };\n\n    var rgb2hsi_1 = rgb2hsi;\n\n    var unpack$e = utils.unpack;\n    var limit$1 = utils.limit;\n    var TWOPI$1 = utils.TWOPI;\n    var PITHIRD = utils.PITHIRD;\n    var cos = Math.cos;\n\n    /*\n     * hue [0..360]\n     * saturation [0..1]\n     * intensity [0..1]\n     */\n    var hsi2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n        */\n        args = unpack$e(args, 'hsi');\n        var h = args[0];\n        var s = args[1];\n        var i = args[2];\n        var r,g,b;\n\n        if (isNaN(h)) { h = 0; }\n        if (isNaN(s)) { s = 0; }\n        // normalize hue\n        if (h > 360) { h -= 360; }\n        if (h < 0) { h += 360; }\n        h /= 360;\n        if (h < 1/3) {\n            b = (1-s)/3;\n            r = (1+s*cos(TWOPI$1*h)/cos(PITHIRD-TWOPI$1*h))/3;\n            g = 1 - (b+r);\n        } else if (h < 2/3) {\n            h -= 1/3;\n            r = (1-s)/3;\n            g = (1+s*cos(TWOPI$1*h)/cos(PITHIRD-TWOPI$1*h))/3;\n            b = 1 - (r+g);\n        } else {\n            h -= 2/3;\n            g = (1-s)/3;\n            b = (1+s*cos(TWOPI$1*h)/cos(PITHIRD-TWOPI$1*h))/3;\n            r = 1 - (g+b);\n        }\n        r = limit$1(i*r*3);\n        g = limit$1(i*g*3);\n        b = limit$1(i*b*3);\n        return [r*255, g*255, b*255, args.length > 3 ? args[3] : 1];\n    };\n\n    var hsi2rgb_1 = hsi2rgb;\n\n    var unpack$f = utils.unpack;\n    var type$6 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hsi = function() {\n        return rgb2hsi_1(this._rgb);\n    };\n\n    chroma_1.hsi = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hsi']) ));\n    };\n\n    input.format.hsi = hsi2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$f(args, 'hsi');\n            if (type$6(args) === 'array' && args.length === 3) {\n                return 'hsi';\n            }\n        }\n    });\n\n    var unpack$g = utils.unpack;\n    var type$7 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hsl = function() {\n        return rgb2hsl_1(this._rgb);\n    };\n\n    chroma_1.hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hsl']) ));\n    };\n\n    input.format.hsl = hsl2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$g(args, 'hsl');\n            if (type$7(args) === 'array' && args.length === 3) {\n                return 'hsl';\n            }\n        }\n    });\n\n    var unpack$h = utils.unpack;\n    var min$1 = Math.min;\n    var max$1 = Math.max;\n\n    /*\n     * supported arguments:\n     * - rgb2hsv(r,g,b)\n     * - rgb2hsv([r,g,b])\n     * - rgb2hsv({r,g,b})\n     */\n    var rgb2hsl$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$h(args, 'rgb');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n        var min_ = min$1(r, g, b);\n        var max_ = max$1(r, g, b);\n        var delta = max_ - min_;\n        var h,s,v;\n        v = max_ / 255.0;\n        if (max_ === 0) {\n            h = Number.NaN;\n            s = 0;\n        } else {\n            s = delta / max_;\n            if (r === max_) { h = (g - b) / delta; }\n            if (g === max_) { h = 2+(b - r) / delta; }\n            if (b === max_) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, s, v]\n    };\n\n    var rgb2hsv = rgb2hsl$1;\n\n    var unpack$i = utils.unpack;\n    var floor$1 = Math.floor;\n\n    var hsv2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$i(args, 'hsv');\n        var h = args[0];\n        var s = args[1];\n        var v = args[2];\n        var r,g,b;\n        v *= 255;\n        if (s === 0) {\n            r = g = b = v;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n\n            var i = floor$1(h);\n            var f = h - i;\n            var p = v * (1 - s);\n            var q = v * (1 - s * f);\n            var t = v * (1 - s * (1 - f));\n\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r,g,b,args.length > 3?args[3]:1];\n    };\n\n    var hsv2rgb_1 = hsv2rgb;\n\n    var unpack$j = utils.unpack;\n    var type$8 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hsv = function() {\n        return rgb2hsv(this._rgb);\n    };\n\n    chroma_1.hsv = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hsv']) ));\n    };\n\n    input.format.hsv = hsv2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$j(args, 'hsv');\n            if (type$8(args) === 'array' && args.length === 3) {\n                return 'hsv';\n            }\n        }\n    });\n\n    var labConstants = {\n        // Corresponds roughly to RGB brighter/darker\n        Kn: 18,\n\n        // D65 standard referent\n        Xn: 0.950470,\n        Yn: 1,\n        Zn: 1.088830,\n\n        t0: 0.137931034,  // 4 / 29\n        t1: 0.206896552,  // 6 / 29\n        t2: 0.12841855,   // 3 * t1 * t1\n        t3: 0.008856452,  // t1 * t1 * t1\n    };\n\n    var unpack$k = utils.unpack;\n    var pow = Math.pow;\n\n    var rgb2lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$k(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2xyz(r,g,b);\n        var x = ref$1[0];\n        var y = ref$1[1];\n        var z = ref$1[2];\n        var l = 116 * y - 16;\n        return [l < 0 ? 0 : l, 500 * (x - y), 200 * (y - z)];\n    };\n\n    var rgb_xyz = function (r) {\n        if ((r /= 255) <= 0.04045) { return r / 12.92; }\n        return pow((r + 0.055) / 1.055, 2.4);\n    };\n\n    var xyz_lab = function (t) {\n        if (t > labConstants.t3) { return pow(t, 1 / 3); }\n        return t / labConstants.t2 + labConstants.t0;\n    };\n\n    var rgb2xyz = function (r,g,b) {\n        r = rgb_xyz(r);\n        g = rgb_xyz(g);\n        b = rgb_xyz(b);\n        var x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / labConstants.Xn);\n        var y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / labConstants.Yn);\n        var z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / labConstants.Zn);\n        return [x,y,z];\n    };\n\n    var rgb2lab_1 = rgb2lab;\n\n    var unpack$l = utils.unpack;\n    var pow$1 = Math.pow;\n\n    /*\n     * L* [0..100]\n     * a [-100..100]\n     * b [-100..100]\n     */\n    var lab2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$l(args, 'lab');\n        var l = args[0];\n        var a = args[1];\n        var b = args[2];\n        var x,y,z, r,g,b_;\n\n        y = (l + 16) / 116;\n        x = isNaN(a) ? y : y + a / 500;\n        z = isNaN(b) ? y : y - b / 200;\n\n        y = labConstants.Yn * lab_xyz(y);\n        x = labConstants.Xn * lab_xyz(x);\n        z = labConstants.Zn * lab_xyz(z);\n\n        r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);  // D65 -> sRGB\n        g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n        b_ = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n\n        return [r,g,b_,args.length > 3 ? args[3] : 1];\n    };\n\n    var xyz_rgb = function (r) {\n        return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow$1(r, 1 / 2.4) - 0.055)\n    };\n\n    var lab_xyz = function (t) {\n        return t > labConstants.t1 ? t * t * t : labConstants.t2 * (t - labConstants.t0)\n    };\n\n    var lab2rgb_1 = lab2rgb;\n\n    var unpack$m = utils.unpack;\n    var type$9 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.lab = function() {\n        return rgb2lab_1(this._rgb);\n    };\n\n    chroma_1.lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['lab']) ));\n    };\n\n    input.format.lab = lab2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$m(args, 'lab');\n            if (type$9(args) === 'array' && args.length === 3) {\n                return 'lab';\n            }\n        }\n    });\n\n    var unpack$n = utils.unpack;\n    var RAD2DEG = utils.RAD2DEG;\n    var sqrt$1 = Math.sqrt;\n    var atan2 = Math.atan2;\n    var round$4 = Math.round;\n\n    var lab2lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$n(args, 'lab');\n        var l = ref[0];\n        var a = ref[1];\n        var b = ref[2];\n        var c = sqrt$1(a * a + b * b);\n        var h = (atan2(b, a) * RAD2DEG + 360) % 360;\n        if (round$4(c*10000) === 0) { h = Number.NaN; }\n        return [l, c, h];\n    };\n\n    var lab2lch_1 = lab2lch;\n\n    var unpack$o = utils.unpack;\n\n\n\n    var rgb2lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$o(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2lab_1(r,g,b);\n        var l = ref$1[0];\n        var a = ref$1[1];\n        var b_ = ref$1[2];\n        return lab2lch_1(l,a,b_);\n    };\n\n    var rgb2lch_1 = rgb2lch;\n\n    var unpack$p = utils.unpack;\n    var DEG2RAD = utils.DEG2RAD;\n    var sin = Math.sin;\n    var cos$1 = Math.cos;\n\n    var lch2lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n        These formulas were invented by David Dalrymple to obtain maximum contrast without going\n        out of gamut if the parameters are in the range 0-1.\n\n        A saturation multiplier was added by Gregor Aisch\n        */\n        var ref = unpack$p(args, 'lch');\n        var l = ref[0];\n        var c = ref[1];\n        var h = ref[2];\n        if (isNaN(h)) { h = 0; }\n        h = h * DEG2RAD;\n        return [l, cos$1(h) * c, sin(h) * c]\n    };\n\n    var lch2lab_1 = lch2lab;\n\n    var unpack$q = utils.unpack;\n\n\n\n    var lch2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$q(args, 'lch');\n        var l = args[0];\n        var c = args[1];\n        var h = args[2];\n        var ref = lch2lab_1 (l,c,h);\n        var L = ref[0];\n        var a = ref[1];\n        var b_ = ref[2];\n        var ref$1 = lab2rgb_1 (L,a,b_);\n        var r = ref$1[0];\n        var g = ref$1[1];\n        var b = ref$1[2];\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var lch2rgb_1 = lch2rgb;\n\n    var unpack$r = utils.unpack;\n\n\n    var hcl2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hcl = unpack$r(args, 'hcl').reverse();\n        return lch2rgb_1.apply(void 0, hcl);\n    };\n\n    var hcl2rgb_1 = hcl2rgb;\n\n    var unpack$s = utils.unpack;\n    var type$a = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.lch = function() { return rgb2lch_1(this._rgb); };\n    Color_1.prototype.hcl = function() { return rgb2lch_1(this._rgb).reverse(); };\n\n    chroma_1.lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['lch']) ));\n    };\n    chroma_1.hcl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hcl']) ));\n    };\n\n    input.format.lch = lch2rgb_1;\n    input.format.hcl = hcl2rgb_1;\n\n    ['lch','hcl'].forEach(function (m) { return input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$s(args, m);\n            if (type$a(args) === 'array' && args.length === 3) {\n                return m;\n            }\n        }\n    }); });\n\n    /**\n    \tX11 color names\n\n    \thttp://www.w3.org/TR/css3-color/#svg-color\n    */\n\n    var w3cx11 = {\n        aliceblue: '#f0f8ff',\n        antiquewhite: '#faebd7',\n        aqua: '#00ffff',\n        aquamarine: '#7fffd4',\n        azure: '#f0ffff',\n        beige: '#f5f5dc',\n        bisque: '#ffe4c4',\n        black: '#000000',\n        blanchedalmond: '#ffebcd',\n        blue: '#0000ff',\n        blueviolet: '#8a2be2',\n        brown: '#a52a2a',\n        burlywood: '#deb887',\n        cadetblue: '#5f9ea0',\n        chartreuse: '#7fff00',\n        chocolate: '#d2691e',\n        coral: '#ff7f50',\n        cornflower: '#6495ed',\n        cornflowerblue: '#6495ed',\n        cornsilk: '#fff8dc',\n        crimson: '#dc143c',\n        cyan: '#00ffff',\n        darkblue: '#00008b',\n        darkcyan: '#008b8b',\n        darkgoldenrod: '#b8860b',\n        darkgray: '#a9a9a9',\n        darkgreen: '#006400',\n        darkgrey: '#a9a9a9',\n        darkkhaki: '#bdb76b',\n        darkmagenta: '#8b008b',\n        darkolivegreen: '#556b2f',\n        darkorange: '#ff8c00',\n        darkorchid: '#9932cc',\n        darkred: '#8b0000',\n        darksalmon: '#e9967a',\n        darkseagreen: '#8fbc8f',\n        darkslateblue: '#483d8b',\n        darkslategray: '#2f4f4f',\n        darkslategrey: '#2f4f4f',\n        darkturquoise: '#00ced1',\n        darkviolet: '#9400d3',\n        deeppink: '#ff1493',\n        deepskyblue: '#00bfff',\n        dimgray: '#696969',\n        dimgrey: '#696969',\n        dodgerblue: '#1e90ff',\n        firebrick: '#b22222',\n        floralwhite: '#fffaf0',\n        forestgreen: '#228b22',\n        fuchsia: '#ff00ff',\n        gainsboro: '#dcdcdc',\n        ghostwhite: '#f8f8ff',\n        gold: '#ffd700',\n        goldenrod: '#daa520',\n        gray: '#808080',\n        green: '#008000',\n        greenyellow: '#adff2f',\n        grey: '#808080',\n        honeydew: '#f0fff0',\n        hotpink: '#ff69b4',\n        indianred: '#cd5c5c',\n        indigo: '#4b0082',\n        ivory: '#fffff0',\n        khaki: '#f0e68c',\n        laserlemon: '#ffff54',\n        lavender: '#e6e6fa',\n        lavenderblush: '#fff0f5',\n        lawngreen: '#7cfc00',\n        lemonchiffon: '#fffacd',\n        lightblue: '#add8e6',\n        lightcoral: '#f08080',\n        lightcyan: '#e0ffff',\n        lightgoldenrod: '#fafad2',\n        lightgoldenrodyellow: '#fafad2',\n        lightgray: '#d3d3d3',\n        lightgreen: '#90ee90',\n        lightgrey: '#d3d3d3',\n        lightpink: '#ffb6c1',\n        lightsalmon: '#ffa07a',\n        lightseagreen: '#20b2aa',\n        lightskyblue: '#87cefa',\n        lightslategray: '#778899',\n        lightslategrey: '#778899',\n        lightsteelblue: '#b0c4de',\n        lightyellow: '#ffffe0',\n        lime: '#00ff00',\n        limegreen: '#32cd32',\n        linen: '#faf0e6',\n        magenta: '#ff00ff',\n        maroon: '#800000',\n        maroon2: '#7f0000',\n        maroon3: '#b03060',\n        mediumaquamarine: '#66cdaa',\n        mediumblue: '#0000cd',\n        mediumorchid: '#ba55d3',\n        mediumpurple: '#9370db',\n        mediumseagreen: '#3cb371',\n        mediumslateblue: '#7b68ee',\n        mediumspringgreen: '#00fa9a',\n        mediumturquoise: '#48d1cc',\n        mediumvioletred: '#c71585',\n        midnightblue: '#191970',\n        mintcream: '#f5fffa',\n        mistyrose: '#ffe4e1',\n        moccasin: '#ffe4b5',\n        navajowhite: '#ffdead',\n        navy: '#000080',\n        oldlace: '#fdf5e6',\n        olive: '#808000',\n        olivedrab: '#6b8e23',\n        orange: '#ffa500',\n        orangered: '#ff4500',\n        orchid: '#da70d6',\n        palegoldenrod: '#eee8aa',\n        palegreen: '#98fb98',\n        paleturquoise: '#afeeee',\n        palevioletred: '#db7093',\n        papayawhip: '#ffefd5',\n        peachpuff: '#ffdab9',\n        peru: '#cd853f',\n        pink: '#ffc0cb',\n        plum: '#dda0dd',\n        powderblue: '#b0e0e6',\n        purple: '#800080',\n        purple2: '#7f007f',\n        purple3: '#a020f0',\n        rebeccapurple: '#663399',\n        red: '#ff0000',\n        rosybrown: '#bc8f8f',\n        royalblue: '#4169e1',\n        saddlebrown: '#8b4513',\n        salmon: '#fa8072',\n        sandybrown: '#f4a460',\n        seagreen: '#2e8b57',\n        seashell: '#fff5ee',\n        sienna: '#a0522d',\n        silver: '#c0c0c0',\n        skyblue: '#87ceeb',\n        slateblue: '#6a5acd',\n        slategray: '#708090',\n        slategrey: '#708090',\n        snow: '#fffafa',\n        springgreen: '#00ff7f',\n        steelblue: '#4682b4',\n        tan: '#d2b48c',\n        teal: '#008080',\n        thistle: '#d8bfd8',\n        tomato: '#ff6347',\n        turquoise: '#40e0d0',\n        violet: '#ee82ee',\n        wheat: '#f5deb3',\n        white: '#ffffff',\n        whitesmoke: '#f5f5f5',\n        yellow: '#ffff00',\n        yellowgreen: '#9acd32'\n    };\n\n    var w3cx11_1 = w3cx11;\n\n    var type$b = utils.type;\n\n\n\n\n\n    Color_1.prototype.name = function() {\n        var hex = rgb2hex_1(this._rgb, 'rgb');\n        for (var i = 0, list = Object.keys(w3cx11_1); i < list.length; i += 1) {\n            var n = list[i];\n\n            if (w3cx11_1[n] === hex) { return n.toLowerCase(); }\n        }\n        return hex;\n    };\n\n    input.format.named = function (name) {\n        name = name.toLowerCase();\n        if (w3cx11_1[name]) { return hex2rgb_1(w3cx11_1[name]); }\n        throw new Error('unknown color name: '+name);\n    };\n\n    input.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$b(h) === 'string' && w3cx11_1[h.toLowerCase()]) {\n                return 'named';\n            }\n        }\n    });\n\n    var unpack$t = utils.unpack;\n\n    var rgb2num = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$t(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        return (r << 16) + (g << 8) + b;\n    };\n\n    var rgb2num_1 = rgb2num;\n\n    var type$c = utils.type;\n\n    var num2rgb = function (num) {\n        if (type$c(num) == \"number\" && num >= 0 && num <= 0xFFFFFF) {\n            var r = num >> 16;\n            var g = (num >> 8) & 0xFF;\n            var b = num & 0xFF;\n            return [r,g,b,1];\n        }\n        throw new Error(\"unknown num color: \"+num);\n    };\n\n    var num2rgb_1 = num2rgb;\n\n    var type$d = utils.type;\n\n\n\n    Color_1.prototype.num = function() {\n        return rgb2num_1(this._rgb);\n    };\n\n    chroma_1.num = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['num']) ));\n    };\n\n    input.format.num = num2rgb_1;\n\n    input.autodetect.push({\n        p: 5,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            if (args.length === 1 && type$d(args[0]) === 'number' && args[0] >= 0 && args[0] <= 0xFFFFFF) {\n                return 'num';\n            }\n        }\n    });\n\n    var unpack$u = utils.unpack;\n    var type$e = utils.type;\n    var round$5 = Math.round;\n\n    Color_1.prototype.rgb = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        if (rnd === false) { return this._rgb.slice(0,3); }\n        return this._rgb.slice(0,3).map(round$5);\n    };\n\n    Color_1.prototype.rgba = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        return this._rgb.slice(0,4).map(function (v,i) {\n            return i<3 ? (rnd === false ? v : round$5(v)) : v;\n        });\n    };\n\n    chroma_1.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['rgb']) ));\n    };\n\n    input.format.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$u(args, 'rgba');\n        if (rgba[3] === undefined) { rgba[3] = 1; }\n        return rgba;\n    };\n\n    input.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$u(args, 'rgba');\n            if (type$e(args) === 'array' && (args.length === 3 ||\n                args.length === 4 && type$e(args[3]) == 'number' && args[3] >= 0 && args[3] <= 1)) {\n                return 'rgb';\n            }\n        }\n    });\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     */\n\n    var log = Math.log;\n\n    var temperature2rgb = function (kelvin) {\n        var temp = kelvin / 100;\n        var r,g,b;\n        if (temp < 66) {\n            r = 255;\n            g = -155.25485562709179 - 0.44596950469579133 * (g = temp-2) + 104.49216199393888 * log(g);\n            b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp-10) + 115.67994401066147 * log(b);\n        } else {\n            r = 351.97690566805693 + 0.114206453784165 * (r = temp-55) - 40.25366309332127 * log(r);\n            g = 325.4494125711974 + 0.07943456536662342 * (g = temp-50) - 28.0852963507957 * log(g);\n            b = 255;\n        }\n        return [r,g,b,1];\n    };\n\n    var temperature2rgb_1 = temperature2rgb;\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     **/\n\n\n    var unpack$v = utils.unpack;\n    var round$6 = Math.round;\n\n    var rgb2temperature = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$v(args, 'rgb');\n        var r = rgb[0], b = rgb[2];\n        var minTemp = 1000;\n        var maxTemp = 40000;\n        var eps = 0.4;\n        var temp;\n        while (maxTemp - minTemp > eps) {\n            temp = (maxTemp + minTemp) * 0.5;\n            var rgb$1 = temperature2rgb_1(temp);\n            if ((rgb$1[2] / rgb$1[0]) >= (b / r)) {\n                maxTemp = temp;\n            } else {\n                minTemp = temp;\n            }\n        }\n        return round$6(temp);\n    };\n\n    var rgb2temperature_1 = rgb2temperature;\n\n    Color_1.prototype.temp =\n    Color_1.prototype.kelvin =\n    Color_1.prototype.temperature = function() {\n        return rgb2temperature_1(this._rgb);\n    };\n\n    chroma_1.temp =\n    chroma_1.kelvin =\n    chroma_1.temperature = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['temp']) ));\n    };\n\n    input.format.temp =\n    input.format.kelvin =\n    input.format.temperature = temperature2rgb_1;\n\n    var type$f = utils.type;\n\n    Color_1.prototype.alpha = function(a, mutate) {\n        if ( mutate === void 0 ) mutate=false;\n\n        if (a !== undefined && type$f(a) === 'number') {\n            if (mutate) {\n                this._rgb[3] = a;\n                return this;\n            }\n            return new Color_1([this._rgb[0], this._rgb[1], this._rgb[2], a], 'rgb');\n        }\n        return this._rgb[3];\n    };\n\n    Color_1.prototype.clipped = function() {\n        return this._rgb._clipped || false;\n    };\n\n    Color_1.prototype.darken = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lab = me.lab();\n    \tlab[0] -= labConstants.Kn * amount;\n    \treturn new Color_1(lab, 'lab').alpha(me.alpha(), true);\n    };\n\n    Color_1.prototype.brighten = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.darken(-amount);\n    };\n\n    Color_1.prototype.darker = Color_1.prototype.darken;\n    Color_1.prototype.brighter = Color_1.prototype.brighten;\n\n    Color_1.prototype.get = function(mc) {\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel);\n            if (i > -1) { return src[i]; }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var type$g = utils.type;\n    var pow$2 = Math.pow;\n\n    var EPS = 1e-7;\n    var MAX_ITER = 20;\n\n    Color_1.prototype.luminance = function(lum) {\n        if (lum !== undefined && type$g(lum) === 'number') {\n            if (lum === 0) {\n                // return pure black\n                return new Color_1([0,0,0,this._rgb[3]], 'rgb');\n            }\n            if (lum === 1) {\n                // return pure white\n                return new Color_1([255,255,255,this._rgb[3]], 'rgb');\n            }\n            // compute new color using...\n            var cur_lum = this.luminance();\n            var mode = 'rgb';\n            var max_iter = MAX_ITER;\n\n            var test = function (low, high) {\n                var mid = low.interpolate(high, 0.5, mode);\n                var lm = mid.luminance();\n                if (Math.abs(lum - lm) < EPS || !max_iter--) {\n                    // close enough\n                    return mid;\n                }\n                return lm > lum ? test(low, mid) : test(mid, high);\n            };\n\n            var rgb = (cur_lum > lum ? test(new Color_1([0,0,0]), this) : test(this, new Color_1([255,255,255]))).rgb();\n            return new Color_1(rgb.concat( [this._rgb[3]]));\n        }\n        return rgb2luminance.apply(void 0, (this._rgb).slice(0,3));\n    };\n\n\n    var rgb2luminance = function (r,g,b) {\n        // relative luminance\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        r = luminance_x(r);\n        g = luminance_x(g);\n        b = luminance_x(b);\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    };\n\n    var luminance_x = function (x) {\n        x /= 255;\n        return x <= 0.03928 ? x/12.92 : pow$2((x+0.055)/1.055, 2.4);\n    };\n\n    var interpolator = {};\n\n    var type$h = utils.type;\n\n\n    var mix = function (col1, col2, f) {\n        if ( f === void 0 ) f=0.5;\n        var rest = [], len = arguments.length - 3;\n        while ( len-- > 0 ) rest[ len ] = arguments[ len + 3 ];\n\n        var mode = rest[0] || 'lrgb';\n        if (!interpolator[mode] && !rest.length) {\n            // fall back to the first supported mode\n            mode = Object.keys(interpolator)[0];\n        }\n        if (!interpolator[mode]) {\n            throw new Error((\"interpolation mode \" + mode + \" is not defined\"));\n        }\n        if (type$h(col1) !== 'object') { col1 = new Color_1(col1); }\n        if (type$h(col2) !== 'object') { col2 = new Color_1(col2); }\n        return interpolator[mode](col1, col2, f)\n            .alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n    };\n\n    Color_1.prototype.mix =\n    Color_1.prototype.interpolate = function(col2, f) {\n    \tif ( f === void 0 ) f=0.5;\n    \tvar rest = [], len = arguments.length - 2;\n    \twhile ( len-- > 0 ) rest[ len ] = arguments[ len + 2 ];\n\n    \treturn mix.apply(void 0, [ this, col2, f ].concat( rest ));\n    };\n\n    Color_1.prototype.premultiply = function(mutate) {\n    \tif ( mutate === void 0 ) mutate=false;\n\n    \tvar rgb = this._rgb;\n    \tvar a = rgb[3];\n    \tif (mutate) {\n    \t\tthis._rgb = [rgb[0]*a, rgb[1]*a, rgb[2]*a, a];\n    \t\treturn this;\n    \t} else {\n    \t\treturn new Color_1([rgb[0]*a, rgb[1]*a, rgb[2]*a, a], 'rgb');\n    \t}\n    };\n\n    Color_1.prototype.saturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lch = me.lch();\n    \tlch[1] += labConstants.Kn * amount;\n    \tif (lch[1] < 0) { lch[1] = 0; }\n    \treturn new Color_1(lch, 'lch').alpha(me.alpha(), true);\n    };\n\n    Color_1.prototype.desaturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.saturate(-amount);\n    };\n\n    var type$i = utils.type;\n\n    Color_1.prototype.set = function(mc, value, mutate) {\n        if ( mutate === void 0 ) mutate=false;\n\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel);\n            if (i > -1) {\n                if (type$i(value) == 'string') {\n                    switch(value.charAt(0)) {\n                        case '+': src[i] += +value; break;\n                        case '-': src[i] += +value; break;\n                        case '*': src[i] *= +(value.substr(1)); break;\n                        case '/': src[i] /= +(value.substr(1)); break;\n                        default: src[i] = +value;\n                    }\n                } else if (type$i(value) === 'number') {\n                    src[i] = value;\n                } else {\n                    throw new Error(\"unsupported value for Color.set\");\n                }\n                var out = new Color_1(src, mode);\n                if (mutate) {\n                    this._rgb = out._rgb;\n                    return this;\n                }\n                return out;\n            }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var rgb$1 = function (col1, col2, f) {\n        var xyz0 = col1._rgb;\n        var xyz1 = col2._rgb;\n        return new Color_1(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator.rgb = rgb$1;\n\n    var sqrt$2 = Math.sqrt;\n    var pow$3 = Math.pow;\n\n    var lrgb = function (col1, col2, f) {\n        var ref = col1._rgb;\n        var x1 = ref[0];\n        var y1 = ref[1];\n        var z1 = ref[2];\n        var ref$1 = col2._rgb;\n        var x2 = ref$1[0];\n        var y2 = ref$1[1];\n        var z2 = ref$1[2];\n        return new Color_1(\n            sqrt$2(pow$3(x1,2) * (1-f) + pow$3(x2,2) * f),\n            sqrt$2(pow$3(y1,2) * (1-f) + pow$3(y2,2) * f),\n            sqrt$2(pow$3(z1,2) * (1-f) + pow$3(z2,2) * f),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator.lrgb = lrgb;\n\n    var lab$1 = function (col1, col2, f) {\n        var xyz0 = col1.lab();\n        var xyz1 = col2.lab();\n        return new Color_1(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'lab'\n        )\n    };\n\n    // register interpolator\n    interpolator.lab = lab$1;\n\n    var _hsx = function (col1, col2, f, m) {\n        var assign, assign$1;\n\n        var xyz0, xyz1;\n        if (m === 'hsl') {\n            xyz0 = col1.hsl();\n            xyz1 = col2.hsl();\n        } else if (m === 'hsv') {\n            xyz0 = col1.hsv();\n            xyz1 = col2.hsv();\n        } else if (m === 'hcg') {\n            xyz0 = col1.hcg();\n            xyz1 = col2.hcg();\n        } else if (m === 'hsi') {\n            xyz0 = col1.hsi();\n            xyz1 = col2.hsi();\n        } else if (m === 'lch' || m === 'hcl') {\n            m = 'hcl';\n            xyz0 = col1.hcl();\n            xyz1 = col2.hcl();\n        }\n\n        var hue0, hue1, sat0, sat1, lbv0, lbv1;\n        if (m.substr(0, 1) === 'h') {\n            (assign = xyz0, hue0 = assign[0], sat0 = assign[1], lbv0 = assign[2]);\n            (assign$1 = xyz1, hue1 = assign$1[0], sat1 = assign$1[1], lbv1 = assign$1[2]);\n        }\n\n        var sat, hue, lbv, dh;\n\n        if (!isNaN(hue0) && !isNaN(hue1)) {\n            // both colors have hue\n            if (hue1 > hue0 && hue1 - hue0 > 180) {\n                dh = hue1-(hue0+360);\n            } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n                dh = hue1+360-hue0;\n            } else{\n                dh = hue1 - hue0;\n            }\n            hue = hue0 + f * dh;\n        } else if (!isNaN(hue0)) {\n            hue = hue0;\n            if ((lbv1 == 1 || lbv1 == 0) && m != 'hsv') { sat = sat0; }\n        } else if (!isNaN(hue1)) {\n            hue = hue1;\n            if ((lbv0 == 1 || lbv0 == 0) && m != 'hsv') { sat = sat1; }\n        } else {\n            hue = Number.NaN;\n        }\n\n        if (sat === undefined) { sat = sat0 + f * (sat1 - sat0); }\n        lbv = lbv0 + f * (lbv1-lbv0);\n        return new Color_1([hue, sat, lbv], m);\n    };\n\n    var lch$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'lch');\n    };\n\n    // register interpolator\n    interpolator.lch = lch$1;\n    interpolator.hcl = lch$1;\n\n    var num$1 = function (col1, col2, f) {\n        var c1 = col1.num();\n        var c2 = col2.num();\n        return new Color_1(c1 + f * (c2-c1), 'num')\n    };\n\n    // register interpolator\n    interpolator.num = num$1;\n\n    var hcg$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hcg');\n    };\n\n    // register interpolator\n    interpolator.hcg = hcg$1;\n\n    var hsi$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hsi');\n    };\n\n    // register interpolator\n    interpolator.hsi = hsi$1;\n\n    var hsl$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hsl');\n    };\n\n    // register interpolator\n    interpolator.hsl = hsl$1;\n\n    var hsv$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hsv');\n    };\n\n    // register interpolator\n    interpolator.hsv = hsv$1;\n\n    var clip_rgb$2 = utils.clip_rgb;\n    var pow$4 = Math.pow;\n    var sqrt$3 = Math.sqrt;\n    var PI$1 = Math.PI;\n    var cos$2 = Math.cos;\n    var sin$1 = Math.sin;\n    var atan2$1 = Math.atan2;\n\n    var average = function (colors, mode, weights) {\n        if ( mode === void 0 ) mode='lrgb';\n        if ( weights === void 0 ) weights=null;\n\n        var l = colors.length;\n        if (!weights) { weights = Array.from(new Array(l)).map(function () { return 1; }); }\n        // normalize weights\n        var k = l / weights.reduce(function(a, b) { return a + b; });\n        weights.forEach(function (w,i) { weights[i] *= k; });\n        // convert colors to Color objects\n        colors = colors.map(function (c) { return new Color_1(c); });\n        if (mode === 'lrgb') {\n            return _average_lrgb(colors, weights)\n        }\n        var first = colors.shift();\n        var xyz = first.get(mode);\n        var cnt = [];\n        var dx = 0;\n        var dy = 0;\n        // initial color\n        for (var i=0; i<xyz.length; i++) {\n            xyz[i] = (xyz[i] || 0) * weights[0];\n            cnt.push(isNaN(xyz[i]) ? 0 : weights[0]);\n            if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n                var A = xyz[i] / 180 * PI$1;\n                dx += cos$2(A) * weights[0];\n                dy += sin$1(A) * weights[0];\n            }\n        }\n\n        var alpha = first.alpha() * weights[0];\n        colors.forEach(function (c,ci) {\n            var xyz2 = c.get(mode);\n            alpha += c.alpha() * weights[ci+1];\n            for (var i=0; i<xyz.length; i++) {\n                if (!isNaN(xyz2[i])) {\n                    cnt[i] += weights[ci+1];\n                    if (mode.charAt(i) === 'h') {\n                        var A = xyz2[i] / 180 * PI$1;\n                        dx += cos$2(A) * weights[ci+1];\n                        dy += sin$1(A) * weights[ci+1];\n                    } else {\n                        xyz[i] += xyz2[i] * weights[ci+1];\n                    }\n                }\n            }\n        });\n\n        for (var i$1=0; i$1<xyz.length; i$1++) {\n            if (mode.charAt(i$1) === 'h') {\n                var A$1 = atan2$1(dy / cnt[i$1], dx / cnt[i$1]) / PI$1 * 180;\n                while (A$1 < 0) { A$1 += 360; }\n                while (A$1 >= 360) { A$1 -= 360; }\n                xyz[i$1] = A$1;\n            } else {\n                xyz[i$1] = xyz[i$1]/cnt[i$1];\n            }\n        }\n        alpha /= l;\n        return (new Color_1(xyz, mode)).alpha(alpha > 0.99999 ? 1 : alpha, true);\n    };\n\n\n    var _average_lrgb = function (colors, weights) {\n        var l = colors.length;\n        var xyz = [0,0,0,0];\n        for (var i=0; i < colors.length; i++) {\n            var col = colors[i];\n            var f = weights[i] / l;\n            var rgb = col._rgb;\n            xyz[0] += pow$4(rgb[0],2) * f;\n            xyz[1] += pow$4(rgb[1],2) * f;\n            xyz[2] += pow$4(rgb[2],2) * f;\n            xyz[3] += rgb[3] * f;\n        }\n        xyz[0] = sqrt$3(xyz[0]);\n        xyz[1] = sqrt$3(xyz[1]);\n        xyz[2] = sqrt$3(xyz[2]);\n        if (xyz[3] > 0.9999999) { xyz[3] = 1; }\n        return new Color_1(clip_rgb$2(xyz));\n    };\n\n    // minimal multi-purpose interface\n\n    // @requires utils color analyze\n\n\n    var type$j = utils.type;\n\n    var pow$5 = Math.pow;\n\n    var scale = function(colors) {\n\n        // constructor\n        var _mode = 'rgb';\n        var _nacol = chroma_1('#ccc');\n        var _spread = 0;\n        // const _fixed = false;\n        var _domain = [0, 1];\n        var _pos = [];\n        var _padding = [0,0];\n        var _classes = false;\n        var _colors = [];\n        var _out = false;\n        var _min = 0;\n        var _max = 1;\n        var _correctLightness = false;\n        var _colorCache = {};\n        var _useCache = true;\n        var _gamma = 1;\n\n        // private methods\n\n        var setColors = function(colors) {\n            colors = colors || ['#fff', '#000'];\n            if (colors && type$j(colors) === 'string' && chroma_1.brewer &&\n                chroma_1.brewer[colors.toLowerCase()]) {\n                colors = chroma_1.brewer[colors.toLowerCase()];\n            }\n            if (type$j(colors) === 'array') {\n                // handle single color\n                if (colors.length === 1) {\n                    colors = [colors[0], colors[0]];\n                }\n                // make a copy of the colors\n                colors = colors.slice(0);\n                // convert to chroma classes\n                for (var c=0; c<colors.length; c++) {\n                    colors[c] = chroma_1(colors[c]);\n                }\n                // auto-fill color position\n                _pos.length = 0;\n                for (var c$1=0; c$1<colors.length; c$1++) {\n                    _pos.push(c$1/(colors.length-1));\n                }\n            }\n            resetCache();\n            return _colors = colors;\n        };\n\n        var getClass = function(value) {\n            if (_classes != null) {\n                var n = _classes.length-1;\n                var i = 0;\n                while (i < n && value >= _classes[i]) {\n                    i++;\n                }\n                return i-1;\n            }\n            return 0;\n        };\n\n        var tMapLightness = function (t) { return t; };\n        var tMapDomain = function (t) { return t; };\n\n        // const classifyValue = function(value) {\n        //     let val = value;\n        //     if (_classes.length > 2) {\n        //         const n = _classes.length-1;\n        //         const i = getClass(value);\n        //         const minc = _classes[0] + ((_classes[1]-_classes[0]) * (0 + (_spread * 0.5)));  // center of 1st class\n        //         const maxc = _classes[n-1] + ((_classes[n]-_classes[n-1]) * (1 - (_spread * 0.5)));  // center of last class\n        //         val = _min + ((((_classes[i] + ((_classes[i+1] - _classes[i]) * 0.5)) - minc) / (maxc-minc)) * (_max - _min));\n        //     }\n        //     return val;\n        // };\n\n        var getColor = function(val, bypassMap) {\n            var col, t;\n            if (bypassMap == null) { bypassMap = false; }\n            if (isNaN(val) || (val === null)) { return _nacol; }\n            if (!bypassMap) {\n                if (_classes && (_classes.length > 2)) {\n                    // find the class\n                    var c = getClass(val);\n                    t = c / (_classes.length-2);\n                } else if (_max !== _min) {\n                    // just interpolate between min/max\n                    t = (val - _min) / (_max - _min);\n                } else {\n                    t = 1;\n                }\n            } else {\n                t = val;\n            }\n\n            // domain map\n            t = tMapDomain(t);\n\n            if (!bypassMap) {\n                t = tMapLightness(t);  // lightness correction\n            }\n\n            if (_gamma !== 1) { t = pow$5(t, _gamma); }\n\n            t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));\n\n            t = Math.min(1, Math.max(0, t));\n\n            var k = Math.floor(t * 10000);\n\n            if (_useCache && _colorCache[k]) {\n                col = _colorCache[k];\n            } else {\n                if (type$j(_colors) === 'array') {\n                    //for i in [0.._pos.length-1]\n                    for (var i=0; i<_pos.length; i++) {\n                        var p = _pos[i];\n                        if (t <= p) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if ((t >= p) && (i === (_pos.length-1))) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if (t > p && t < _pos[i+1]) {\n                            t = (t-p)/(_pos[i+1]-p);\n                            col = chroma_1.interpolate(_colors[i], _colors[i+1], t, _mode);\n                            break;\n                        }\n                    }\n                } else if (type$j(_colors) === 'function') {\n                    col = _colors(t);\n                }\n                if (_useCache) { _colorCache[k] = col; }\n            }\n            return col;\n        };\n\n        var resetCache = function () { return _colorCache = {}; };\n\n        setColors(colors);\n\n        // public interface\n\n        var f = function(v) {\n            var c = chroma_1(getColor(v));\n            if (_out && c[_out]) { return c[_out](); } else { return c; }\n        };\n\n        f.classes = function(classes) {\n            if (classes != null) {\n                if (type$j(classes) === 'array') {\n                    _classes = classes;\n                    _domain = [classes[0], classes[classes.length-1]];\n                } else {\n                    var d = chroma_1.analyze(_domain);\n                    if (classes === 0) {\n                        _classes = [d.min, d.max];\n                    } else {\n                        _classes = chroma_1.limits(d, 'e', classes);\n                    }\n                }\n                return f;\n            }\n            return _classes;\n        };\n\n\n        f.domain = function(domain) {\n            if (!arguments.length) {\n                return _domain;\n            }\n            _min = domain[0];\n            _max = domain[domain.length-1];\n            _pos = [];\n            var k = _colors.length;\n            if ((domain.length === k) && (_min !== _max)) {\n                // update positions\n                for (var i = 0, list = Array.from(domain); i < list.length; i += 1) {\n                    var d = list[i];\n\n                  _pos.push((d-_min) / (_max-_min));\n                }\n            } else {\n                for (var c=0; c<k; c++) {\n                    _pos.push(c/(k-1));\n                }\n                if (domain.length > 2) {\n                    // set domain map\n                    var tOut = domain.map(function (d,i) { return i/(domain.length-1); });\n                    var tBreaks = domain.map(function (d) { return (d - _min) / (_max - _min); });\n                    if (!tBreaks.every(function (val, i) { return tOut[i] === val; })) {\n                        tMapDomain = function (t) {\n                            if (t <= 0 || t >= 1) { return t; }\n                            var i = 0;\n                            while (t >= tBreaks[i+1]) { i++; }\n                            var f = (t - tBreaks[i]) / (tBreaks[i+1] - tBreaks[i]);\n                            var out = tOut[i] + f * (tOut[i+1] - tOut[i]);\n                            return out;\n                        };\n                    }\n\n                }\n            }\n            _domain = [_min, _max];\n            return f;\n        };\n\n        f.mode = function(_m) {\n            if (!arguments.length) {\n                return _mode;\n            }\n            _mode = _m;\n            resetCache();\n            return f;\n        };\n\n        f.range = function(colors, _pos) {\n            setColors(colors, _pos);\n            return f;\n        };\n\n        f.out = function(_o) {\n            _out = _o;\n            return f;\n        };\n\n        f.spread = function(val) {\n            if (!arguments.length) {\n                return _spread;\n            }\n            _spread = val;\n            return f;\n        };\n\n        f.correctLightness = function(v) {\n            if (v == null) { v = true; }\n            _correctLightness = v;\n            resetCache();\n            if (_correctLightness) {\n                tMapLightness = function(t) {\n                    var L0 = getColor(0, true).lab()[0];\n                    var L1 = getColor(1, true).lab()[0];\n                    var pol = L0 > L1;\n                    var L_actual = getColor(t, true).lab()[0];\n                    var L_ideal = L0 + ((L1 - L0) * t);\n                    var L_diff = L_actual - L_ideal;\n                    var t0 = 0;\n                    var t1 = 1;\n                    var max_iter = 20;\n                    while ((Math.abs(L_diff) > 1e-2) && (max_iter-- > 0)) {\n                        (function() {\n                            if (pol) { L_diff *= -1; }\n                            if (L_diff < 0) {\n                                t0 = t;\n                                t += (t1 - t) * 0.5;\n                            } else {\n                                t1 = t;\n                                t += (t0 - t) * 0.5;\n                            }\n                            L_actual = getColor(t, true).lab()[0];\n                            return L_diff = L_actual - L_ideal;\n                        })();\n                    }\n                    return t;\n                };\n            } else {\n                tMapLightness = function (t) { return t; };\n            }\n            return f;\n        };\n\n        f.padding = function(p) {\n            if (p != null) {\n                if (type$j(p) === 'number') {\n                    p = [p,p];\n                }\n                _padding = p;\n                return f;\n            } else {\n                return _padding;\n            }\n        };\n\n        f.colors = function(numColors, out) {\n            // If no arguments are given, return the original colors that were provided\n            if (arguments.length < 2) { out = 'hex'; }\n            var result = [];\n\n            if (arguments.length === 0) {\n                result = _colors.slice(0);\n\n            } else if (numColors === 1) {\n                result = [f(0.5)];\n\n            } else if (numColors > 1) {\n                var dm = _domain[0];\n                var dd = _domain[1] - dm;\n                result = __range__(0, numColors, false).map(function (i) { return f( dm + ((i/(numColors-1)) * dd) ); });\n\n            } else { // returns all colors based on the defined classes\n                colors = [];\n                var samples = [];\n                if (_classes && (_classes.length > 2)) {\n                    for (var i = 1, end = _classes.length, asc = 1 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n                        samples.push((_classes[i-1]+_classes[i])*0.5);\n                    }\n                } else {\n                    samples = _domain;\n                }\n                result = samples.map(function (v) { return f(v); });\n            }\n\n            if (chroma_1[out]) {\n                result = result.map(function (c) { return c[out](); });\n            }\n            return result;\n        };\n\n        f.cache = function(c) {\n            if (c != null) {\n                _useCache = c;\n                return f;\n            } else {\n                return _useCache;\n            }\n        };\n\n        f.gamma = function(g) {\n            if (g != null) {\n                _gamma = g;\n                return f;\n            } else {\n                return _gamma;\n            }\n        };\n\n        f.nodata = function(d) {\n            if (d != null) {\n                _nacol = chroma_1(d);\n                return f;\n            } else {\n                return _nacol;\n            }\n        };\n\n        return f;\n    };\n\n    function __range__(left, right, inclusive) {\n      var range = [];\n      var ascending = left < right;\n      var end = !inclusive ? right : ascending ? right + 1 : right - 1;\n      for (var i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n        range.push(i);\n      }\n      return range;\n    }\n\n    //\n    // interpolates between a set of colors uzing a bezier spline\n    //\n\n    // @requires utils lab\n\n\n\n\n    var bezier = function(colors) {\n        var assign, assign$1, assign$2;\n\n        var I, lab0, lab1, lab2;\n        colors = colors.map(function (c) { return new Color_1(c); });\n        if (colors.length === 2) {\n            // linear interpolation\n            (assign = colors.map(function (c) { return c.lab(); }), lab0 = assign[0], lab1 = assign[1]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return lab0[i] + (t * (lab1[i] - lab0[i])); }));\n                return new Color_1(lab, 'lab');\n            };\n        } else if (colors.length === 3) {\n            // quadratic bezier interpolation\n            (assign$1 = colors.map(function (c) { return c.lab(); }), lab0 = assign$1[0], lab1 = assign$1[1], lab2 = assign$1[2]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t) * lab0[i]) + (2 * (1-t) * t * lab1[i]) + (t * t * lab2[i]); }));\n                return new Color_1(lab, 'lab');\n            };\n        } else if (colors.length === 4) {\n            // cubic bezier interpolation\n            var lab3;\n            (assign$2 = colors.map(function (c) { return c.lab(); }), lab0 = assign$2[0], lab1 = assign$2[1], lab2 = assign$2[2], lab3 = assign$2[3]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t)*(1-t) * lab0[i]) + (3 * (1-t) * (1-t) * t * lab1[i]) + (3 * (1-t) * t * t * lab2[i]) + (t*t*t * lab3[i]); }));\n                return new Color_1(lab, 'lab');\n            };\n        } else if (colors.length === 5) {\n            var I0 = bezier(colors.slice(0, 3));\n            var I1 = bezier(colors.slice(2, 5));\n            I = function(t) {\n                if (t < 0.5) {\n                    return I0(t*2);\n                } else {\n                    return I1((t-0.5)*2);\n                }\n            };\n        }\n        return I;\n    };\n\n    var bezier_1 = function (colors) {\n        var f = bezier(colors);\n        f.scale = function () { return scale(f); };\n        return f;\n    };\n\n    /*\n     * interpolates between a set of colors uzing a bezier spline\n     * blend mode formulas taken from http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/\n     */\n\n\n\n\n    var blend = function (bottom, top, mode) {\n        if (!blend[mode]) {\n            throw new Error('unknown blend mode ' + mode);\n        }\n        return blend[mode](bottom, top);\n    };\n\n    var blend_f = function (f) { return function (bottom,top) {\n            var c0 = chroma_1(top).rgb();\n            var c1 = chroma_1(bottom).rgb();\n            return chroma_1.rgb(f(c0, c1));\n        }; };\n\n    var each = function (f) { return function (c0, c1) {\n            var out = [];\n            out[0] = f(c0[0], c1[0]);\n            out[1] = f(c0[1], c1[1]);\n            out[2] = f(c0[2], c1[2]);\n            return out;\n        }; };\n\n    var normal = function (a) { return a; };\n    var multiply = function (a,b) { return a * b / 255; };\n    var darken$1 = function (a,b) { return a > b ? b : a; };\n    var lighten = function (a,b) { return a > b ? a : b; };\n    var screen = function (a,b) { return 255 * (1 - (1-a/255) * (1-b/255)); };\n    var overlay = function (a,b) { return b < 128 ? 2 * a * b / 255 : 255 * (1 - 2 * (1 - a / 255 ) * ( 1 - b / 255 )); };\n    var burn = function (a,b) { return 255 * (1 - (1 - b / 255) / (a/255)); };\n    var dodge = function (a,b) {\n        if (a === 255) { return 255; }\n        a = 255 * (b / 255) / (1 - a / 255);\n        return a > 255 ? 255 : a\n    };\n\n    // # add = (a,b) ->\n    // #     if (a + b > 255) then 255 else a + b\n\n    blend.normal = blend_f(each(normal));\n    blend.multiply = blend_f(each(multiply));\n    blend.screen = blend_f(each(screen));\n    blend.overlay = blend_f(each(overlay));\n    blend.darken = blend_f(each(darken$1));\n    blend.lighten = blend_f(each(lighten));\n    blend.dodge = blend_f(each(dodge));\n    blend.burn = blend_f(each(burn));\n    // blend.add = blend_f(each(add));\n\n    var blend_1 = blend;\n\n    // cubehelix interpolation\n    // based on D.A. Green \"A colour scheme for the display of astronomical intensity images\"\n    // http://astron-soc.in/bulletin/11June/289392011.pdf\n\n    var type$k = utils.type;\n    var clip_rgb$3 = utils.clip_rgb;\n    var TWOPI$2 = utils.TWOPI;\n    var pow$6 = Math.pow;\n    var sin$2 = Math.sin;\n    var cos$3 = Math.cos;\n\n\n    var cubehelix = function(start, rotations, hue, gamma, lightness) {\n        if ( start === void 0 ) start=300;\n        if ( rotations === void 0 ) rotations=-1.5;\n        if ( hue === void 0 ) hue=1;\n        if ( gamma === void 0 ) gamma=1;\n        if ( lightness === void 0 ) lightness=[0,1];\n\n        var dh = 0, dl;\n        if (type$k(lightness) === 'array') {\n            dl = lightness[1] - lightness[0];\n        } else {\n            dl = 0;\n            lightness = [lightness, lightness];\n        }\n\n        var f = function(fract) {\n            var a = TWOPI$2 * (((start+120)/360) + (rotations * fract));\n            var l = pow$6(lightness[0] + (dl * fract), gamma);\n            var h = dh !== 0 ? hue[0] + (fract * dh) : hue;\n            var amp = (h * l * (1-l)) / 2;\n            var cos_a = cos$3(a);\n            var sin_a = sin$2(a);\n            var r = l + (amp * ((-0.14861 * cos_a) + (1.78277* sin_a)));\n            var g = l + (amp * ((-0.29227 * cos_a) - (0.90649* sin_a)));\n            var b = l + (amp * (+1.97294 * cos_a));\n            return chroma_1(clip_rgb$3([r*255,g*255,b*255,1]));\n        };\n\n        f.start = function(s) {\n            if ((s == null)) { return start; }\n            start = s;\n            return f;\n        };\n\n        f.rotations = function(r) {\n            if ((r == null)) { return rotations; }\n            rotations = r;\n            return f;\n        };\n\n        f.gamma = function(g) {\n            if ((g == null)) { return gamma; }\n            gamma = g;\n            return f;\n        };\n\n        f.hue = function(h) {\n            if ((h == null)) { return hue; }\n            hue = h;\n            if (type$k(hue) === 'array') {\n                dh = hue[1] - hue[0];\n                if (dh === 0) { hue = hue[1]; }\n            } else {\n                dh = 0;\n            }\n            return f;\n        };\n\n        f.lightness = function(h) {\n            if ((h == null)) { return lightness; }\n            if (type$k(h) === 'array') {\n                lightness = h;\n                dl = h[1] - h[0];\n            } else {\n                lightness = [h,h];\n                dl = 0;\n            }\n            return f;\n        };\n\n        f.scale = function () { return chroma_1.scale(f); };\n\n        f.hue(hue);\n\n        return f;\n    };\n\n    var digits = '0123456789abcdef';\n\n    var floor$2 = Math.floor;\n    var random = Math.random;\n\n    var random_1 = function () {\n        var code = '#';\n        for (var i=0; i<6; i++) {\n            code += digits.charAt(floor$2(random() * 16));\n        }\n        return new Color_1(code, 'hex');\n    };\n\n    var log$1 = Math.log;\n    var pow$7 = Math.pow;\n    var floor$3 = Math.floor;\n    var abs = Math.abs;\n\n\n    var analyze = function (data, key) {\n        if ( key === void 0 ) key=null;\n\n        var r = {\n            min: Number.MAX_VALUE,\n            max: Number.MAX_VALUE*-1,\n            sum: 0,\n            values: [],\n            count: 0\n        };\n        if (type(data) === 'object') {\n            data = Object.values(data);\n        }\n        data.forEach(function (val) {\n            if (key && type(val) === 'object') { val = val[key]; }\n            if (val !== undefined && val !== null && !isNaN(val)) {\n                r.values.push(val);\n                r.sum += val;\n                if (val < r.min) { r.min = val; }\n                if (val > r.max) { r.max = val; }\n                r.count += 1;\n            }\n        });\n\n        r.domain = [r.min, r.max];\n\n        r.limits = function (mode, num) { return limits(r, mode, num); };\n\n        return r;\n    };\n\n\n    var limits = function (data, mode, num) {\n        if ( mode === void 0 ) mode='equal';\n        if ( num === void 0 ) num=7;\n\n        if (type(data) == 'array') {\n            data = analyze(data);\n        }\n        var min = data.min;\n        var max = data.max;\n        var values = data.values.sort(function (a,b) { return a-b; });\n\n        if (num === 1) { return [min,max]; }\n\n        var limits = [];\n\n        if (mode.substr(0,1) === 'c') { // continuous\n            limits.push(min);\n            limits.push(max);\n        }\n\n        if (mode.substr(0,1) === 'e') { // equal interval\n            limits.push(min);\n            for (var i=1; i<num; i++) {\n                limits.push(min+((i/num)*(max-min)));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'l') { // log scale\n            if (min <= 0) {\n                throw new Error('Logarithmic scales are only possible for values > 0');\n            }\n            var min_log = Math.LOG10E * log$1(min);\n            var max_log = Math.LOG10E * log$1(max);\n            limits.push(min);\n            for (var i$1=1; i$1<num; i$1++) {\n                limits.push(pow$7(10, min_log + ((i$1/num) * (max_log - min_log))));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'q') { // quantile scale\n            limits.push(min);\n            for (var i$2=1; i$2<num; i$2++) {\n                var p = ((values.length-1) * i$2)/num;\n                var pb = floor$3(p);\n                if (pb === p) {\n                    limits.push(values[pb]);\n                } else { // p > pb\n                    var pr = p - pb;\n                    limits.push((values[pb]*(1-pr)) + (values[pb+1]*pr));\n                }\n            }\n            limits.push(max);\n\n        }\n\n        else if (mode.substr(0,1) === 'k') { // k-means clustering\n            /*\n            implementation based on\n            http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n            simplified for 1-d input values\n            */\n            var cluster;\n            var n = values.length;\n            var assignments = new Array(n);\n            var clusterSizes = new Array(num);\n            var repeat = true;\n            var nb_iters = 0;\n            var centroids = null;\n\n            // get seed values\n            centroids = [];\n            centroids.push(min);\n            for (var i$3=1; i$3<num; i$3++) {\n                centroids.push(min + ((i$3/num) * (max-min)));\n            }\n            centroids.push(max);\n\n            while (repeat) {\n                // assignment step\n                for (var j=0; j<num; j++) {\n                    clusterSizes[j] = 0;\n                }\n                for (var i$4=0; i$4<n; i$4++) {\n                    var value = values[i$4];\n                    var mindist = Number.MAX_VALUE;\n                    var best = (void 0);\n                    for (var j$1=0; j$1<num; j$1++) {\n                        var dist = abs(centroids[j$1]-value);\n                        if (dist < mindist) {\n                            mindist = dist;\n                            best = j$1;\n                        }\n                        clusterSizes[best]++;\n                        assignments[i$4] = best;\n                    }\n                }\n\n                // update centroids step\n                var newCentroids = new Array(num);\n                for (var j$2=0; j$2<num; j$2++) {\n                    newCentroids[j$2] = null;\n                }\n                for (var i$5=0; i$5<n; i$5++) {\n                    cluster = assignments[i$5];\n                    if (newCentroids[cluster] === null) {\n                        newCentroids[cluster] = values[i$5];\n                    } else {\n                        newCentroids[cluster] += values[i$5];\n                    }\n                }\n                for (var j$3=0; j$3<num; j$3++) {\n                    newCentroids[j$3] *= 1/clusterSizes[j$3];\n                }\n\n                // check convergence\n                repeat = false;\n                for (var j$4=0; j$4<num; j$4++) {\n                    if (newCentroids[j$4] !== centroids[j$4]) {\n                        repeat = true;\n                        break;\n                    }\n                }\n\n                centroids = newCentroids;\n                nb_iters++;\n\n                if (nb_iters > 200) {\n                    repeat = false;\n                }\n            }\n\n            // finished k-means clustering\n            // the next part is borrowed from gabrielflor.it\n            var kClusters = {};\n            for (var j$5=0; j$5<num; j$5++) {\n                kClusters[j$5] = [];\n            }\n            for (var i$6=0; i$6<n; i$6++) {\n                cluster = assignments[i$6];\n                kClusters[cluster].push(values[i$6]);\n            }\n            var tmpKMeansBreaks = [];\n            for (var j$6=0; j$6<num; j$6++) {\n                tmpKMeansBreaks.push(kClusters[j$6][0]);\n                tmpKMeansBreaks.push(kClusters[j$6][kClusters[j$6].length-1]);\n            }\n            tmpKMeansBreaks = tmpKMeansBreaks.sort(function (a,b){ return a-b; });\n            limits.push(tmpKMeansBreaks[0]);\n            for (var i$7=1; i$7 < tmpKMeansBreaks.length; i$7+= 2) {\n                var v = tmpKMeansBreaks[i$7];\n                if (!isNaN(v) && (limits.indexOf(v) === -1)) {\n                    limits.push(v);\n                }\n            }\n        }\n        return limits;\n    };\n\n    var analyze_1 = {analyze: analyze, limits: limits};\n\n    var contrast = function (a, b) {\n        // WCAG contrast ratio\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n        a = new Color_1(a);\n        b = new Color_1(b);\n        var l1 = a.luminance();\n        var l2 = b.luminance();\n        return l1 > l2 ? (l1 + 0.05) / (l2 + 0.05) : (l2 + 0.05) / (l1 + 0.05);\n    };\n\n    var sqrt$4 = Math.sqrt;\n    var atan2$2 = Math.atan2;\n    var abs$1 = Math.abs;\n    var cos$4 = Math.cos;\n    var PI$2 = Math.PI;\n\n    var deltaE = function(a, b, L, C) {\n        if ( L === void 0 ) L=1;\n        if ( C === void 0 ) C=1;\n\n        // Delta E (CMC)\n        // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CMC.html\n        a = new Color_1(a);\n        b = new Color_1(b);\n        var ref = Array.from(a.lab());\n        var L1 = ref[0];\n        var a1 = ref[1];\n        var b1 = ref[2];\n        var ref$1 = Array.from(b.lab());\n        var L2 = ref$1[0];\n        var a2 = ref$1[1];\n        var b2 = ref$1[2];\n        var c1 = sqrt$4((a1 * a1) + (b1 * b1));\n        var c2 = sqrt$4((a2 * a2) + (b2 * b2));\n        var sl = L1 < 16.0 ? 0.511 : (0.040975 * L1) / (1.0 + (0.01765 * L1));\n        var sc = ((0.0638 * c1) / (1.0 + (0.0131 * c1))) + 0.638;\n        var h1 = c1 < 0.000001 ? 0.0 : (atan2$2(b1, a1) * 180.0) / PI$2;\n        while (h1 < 0) { h1 += 360; }\n        while (h1 >= 360) { h1 -= 360; }\n        var t = (h1 >= 164.0) && (h1 <= 345.0) ? (0.56 + abs$1(0.2 * cos$4((PI$2 * (h1 + 168.0)) / 180.0))) : (0.36 + abs$1(0.4 * cos$4((PI$2 * (h1 + 35.0)) / 180.0)));\n        var c4 = c1 * c1 * c1 * c1;\n        var f = sqrt$4(c4 / (c4 + 1900.0));\n        var sh = sc * (((f * t) + 1.0) - f);\n        var delL = L1 - L2;\n        var delC = c1 - c2;\n        var delA = a1 - a2;\n        var delB = b1 - b2;\n        var dH2 = ((delA * delA) + (delB * delB)) - (delC * delC);\n        var v1 = delL / (L * sl);\n        var v2 = delC / (C * sc);\n        var v3 = sh;\n        return sqrt$4((v1 * v1) + (v2 * v2) + (dH2 / (v3 * v3)));\n    };\n\n    // simple Euclidean distance\n    var distance = function(a, b, mode) {\n        if ( mode === void 0 ) mode='lab';\n\n        // Delta E (CIE 1976)\n        // see http://www.brucelindbloom.com/index.html?Equations.html\n        a = new Color_1(a);\n        b = new Color_1(b);\n        var l1 = a.get(mode);\n        var l2 = b.get(mode);\n        var sum_sq = 0;\n        for (var i in l1) {\n            var d = (l1[i] || 0) - (l2[i] || 0);\n            sum_sq += d*d;\n        }\n        return Math.sqrt(sum_sq);\n    };\n\n    var valid = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        try {\n            new (Function.prototype.bind.apply( Color_1, [ null ].concat( args) ));\n            return true;\n        } catch (e) {\n            return false;\n        }\n    };\n\n    // some pre-defined color scales:\n\n\n\n\n    var scales = {\n    \tcool: function cool() { return scale([chroma_1.hsl(180,1,.9), chroma_1.hsl(250,.7,.4)]) },\n    \thot: function hot() { return scale(['#000','#f00','#ff0','#fff'], [0,.25,.75,1]).mode('rgb') }\n    };\n\n    /**\n        ColorBrewer colors for chroma.js\n\n        Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The\n        Pennsylvania State University.\n\n        Licensed under the Apache License, Version 2.0 (the \"License\");\n        you may not use this file except in compliance with the License.\n        You may obtain a copy of the License at\n        http://www.apache.org/licenses/LICENSE-2.0\n\n        Unless required by applicable law or agreed to in writing, software distributed\n        under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n        CONDITIONS OF ANY KIND, either express or implied. See the License for the\n        specific language governing permissions and limitations under the License.\n    */\n\n    var colorbrewer = {\n        // sequential\n        OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n        PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n        BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n        Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n        BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n        YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n        YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n        Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n        RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n        Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n        YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n        Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n        GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n        Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n        YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n        PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n        Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n        PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n        Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n\n        // diverging\n\n        Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n        RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n        RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n        PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n        PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n        RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n        BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n        RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n        PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n\n        // qualitative\n\n        Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n        Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n        Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n        Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n        Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n        Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n        Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n        Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2'],\n    };\n\n    // add lowercase aliases for case-insensitive matches\n    for (var i$1 = 0, list$1 = Object.keys(colorbrewer); i$1 < list$1.length; i$1 += 1) {\n        var key = list$1[i$1];\n\n        colorbrewer[key.toLowerCase()] = colorbrewer[key];\n    }\n\n    var colorbrewer_1 = colorbrewer;\n\n    // feel free to comment out anything to rollup\n    // a smaller chroma.js built\n\n    // io --> convert colors\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    // operators --> modify existing Colors\n\n\n\n\n\n\n\n\n\n\n    // interpolators\n\n\n\n\n\n\n\n\n\n\n    // generators -- > create new colors\n    chroma_1.average = average;\n    chroma_1.bezier = bezier_1;\n    chroma_1.blend = blend_1;\n    chroma_1.cubehelix = cubehelix;\n    chroma_1.mix = chroma_1.interpolate = mix;\n    chroma_1.random = random_1;\n    chroma_1.scale = scale;\n\n    // other utility methods\n    chroma_1.analyze = analyze_1.analyze;\n    chroma_1.contrast = contrast;\n    chroma_1.deltaE = deltaE;\n    chroma_1.distance = distance;\n    chroma_1.limits = analyze_1.limits;\n    chroma_1.valid = valid;\n\n    // scale\n    chroma_1.scales = scales;\n\n    // colors\n    chroma_1.colors = w3cx11_1;\n    chroma_1.brewer = colorbrewer_1;\n\n    var chroma_js = chroma_1;\n\n    return chroma_js;\n\n})));\n","import View from \"./View.js\";\nimport chroma from \"chroma-js\";\n\nclass audioView extends View {\n  _parentEl = document.querySelector(\".radio-table\");\n\n  addHandlerStation(handler) {\n    this._parentEl.addEventListener(\"click\", function (e) {\n      const tableRow = e.target.closest(\"tr\");\n      console.log(chroma(\"#c2fa00\").darken().saturate().hex());\n      if (!tableRow) return;\n      handler(tableRow.dataset.station);\n    });\n  }\n}\n\nexport default new audioView();\n","import View from \"./View.js\";\n\nclass iconView extends View {\n  _parentEl = document.querySelector(\".icon--table\");\n\n  addHandlerTable(handler) {\n    this._parentEl.addEventListener(\"click\", function (e) {\n      const tableIcon = e.target.closest(\".icon--table\");\n      const table = document.querySelector(\".radio-table\");\n      if (!tableIcon) return;\n      handler(table);\n    });\n  }\n}\n\nexport default new iconView();\n","import * as model from \"./model.js\";\nimport { MINUTES } from \"./config.js\";\nimport weatherView from \"./views/weatherView.js\";\nimport audioView from \"./views/audioView.js\";\nimport iconView from \"./views/iconView.js\";\n\nconst controlStation = async function (station) {\n  try {\n    // Updates weather given station\n    const weather = await model.updateWeather(station);\n    model.state.station = station;\n    model.state.weather = weather;\n\n    // Periodically checks if weather data is current\n    //  If not, updates weather\n    //  THERE IS A PACKAGE IN NODE THAT CAN MORE ELEGANTLY HANDLE THIS\n    //    Implement once you know noe\n    //    https://www.npmjs.com/package/set-interval-async\n    async function execute1() {\n      while (true) {\n        await new Promise((resolve) => setTimeout(resolve, 2 * MINUTES));\n        await model.checkWeather(station);\n      }\n    }\n\n    execute1();\n\n    // Renders weather\n    // weatherView.render(model.stations[station], weather);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst toggleHidden = function (el) {\n  el.classList.toggle(\"moving\");\n  el.classList.toggle(\"hidden\");\n};\n\nconst controlAudio = function (station) {\n  // console.log(station);\n  // console.log(model.stations[station].streamingUrl);\n  // url = model.stations[station].streamingUrl;\n  const audio = new Audio(`${model.stations[station].streamingUrl}`);\n  audio.play();\n};\n\nconst init = function () {\n  audioView.addHandlerStation(controlAudio);\n  iconView.addHandlerTable(toggleHidden);\n};\n\ninit();\n"],"names":["$0f1d4402dffacf5b$export$fee870b40919a015","fbi","name","city","coordinates","streamingUrl","kutx","cism","_data","render","station","weather","this","_station","_weather","markup","_generateMarkup","_clear","_parentEl","insertAdjacentHTML","innerHTML","$3a07c34e115c11c9$export$2e2bcd8739ae039","document","querySelector","main","temp","description","wind","speed","deg","global","factory","$3662ed097e2b5ad0$exports","limit","x","min","max","classToType","i1","list1","length","toLowerCase","type","obj","Object","prototype","toString","call","PI","Math","utils","clip_rgb","rgb","_clipped","_unclipped","slice","i","unpack","args","keyOrder","Array","split","filter","k","undefined","map","last","l","TWOPI","PITHIRD","DEG2RAD","RAD2DEG","input","format","autodetect","last$1","clip_rgb$1","type$1","Color","len","arguments","me","constructor","mode","sorted","sort","a","b","p","list","chk","test","apply","Error","_rgb","push","hex","join","Color_1","chroma","Function","bind","concat","version","chroma_1","unpack$1","max1","rgb2cmyk_1","ref","r","g","f","c","m","y","unpack$2","cmyk2rgb_1","alpha","unpack$3","type$2","cmyk","unpack$4","last$2","rnd1","round","hsl2css_1","hsla","unpack$5","rgb2hsl_1","s","h","Number","NaN","unpack$6","last$3","rgb2css_1","rgba","substr","unpack$7","round$1","hsl2rgb_1","assign","t3","t2","t1","h_","RE_RGB","RE_RGBA","RE_RGB_PCT","RE_RGBA_PCT","RE_HSL","RE_HSLA","round$2","css2rgb","css","trim","named","e","match","rgb$1","i$1","rgb$2","i$2","rgb$3","i$3","hsl","rgb$4","hsl$1","rgb$5","css2rgb_1","type$3","rest","unpack$8","gl","unpack$9","rgb2hcg_1","delta","_g","unpack$a","floor","hcg2rgb_1","assign$1","assign$2","assign$3","assign$4","assign$5","_c","q","t","v","unpack$b","type$4","hcg","unpack$c","last$4","round$3","rgb2hex_1","u","str","hxa","RE_HEX","RE_HEXA","hex2rgb_1","parseInt","u$1","type$5","indexOf","unpack$d","min1","sqrt","acos","rgb2hsi_1","min_","unpack$e","limit$1","TWOPI$1","cos","hsi2rgb_1","isNaN","unpack$f","type$6","hsi","unpack$g","type$7","unpack$h","min$1","max$1","rgb2hsv","max_","unpack$i","floor$1","hsv2rgb_1","unpack$j","type$8","hsv","labConstants","unpack$k","pow","rgb_xyz","xyz_lab","rgb2xyz","rgb2lab_1","ref$1","z","unpack$l","pow$1","xyz_rgb","lab_xyz","lab2rgb_1","unpack$m","type$9","lab","unpack$n","sqrt$1","atan2","round$4","lab2lch_1","unpack$o","rgb2lch_1","b_","unpack$p","sin","cos$1","lch2lab_1","unpack$q","lch2rgb_1","L","unpack$r","hcl2rgb_1","hcl","reverse","unpack$s","type$a","lch","forEach","w3cx11_1","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflower","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","laserlemon","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrod","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","maroon2","maroon3","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","purple2","purple3","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","type$b","keys","n","unpack$t","rgb2num_1","type$c","num2rgb_1","num","type$d","unpack$u","type$e","round$5","rnd","log","temperature2rgb_1","kelvin","unpack$v","round$6","rgb2temperature_1","minTemp","maxTemp","eps","temperature","type$f","mutate","clipped","darken","amount","brighten","darker","brighter","get","mc","channel","src","type$g","pow$2","luminance","lum","cur_lum","max_iter","low","high","mid","interpolate","lm","abs","rgb2luminance","luminance_x","interpolator","type$h","mix","col1","col2","premultiply","saturate","desaturate","type$i","set","value","charAt","out","xyz0","xyz1","sqrt$2","pow$3","lrgb","x1","y1","z1","x2","y2","z2","_hsx","hue0","hue1","sat0","sat1","lbv0","lbv1","sat","hue","lch$1","c1","c2","clip_rgb$2","pow$4","sqrt$3","PI$1","cos$2","sin$1","atan2$1","_average_lrgb","colors","weights","xyz","col","type$j","pow$5","scale","colors1","_mode","_nacol","_spread","_domain","_pos1","_padding","_classes","_colors","_out","_min","_max","_correctLightness","_colorCache","_useCache","_gamma","setColors","brewer","c$1","resetCache","tMapLightness","tMapDomain","getColor","val","bypassMap","getClass","f1","classes","d","analyze","limits","domain","i3","from","tOut","tBreaks","every","_m","range","_pos","_o","spread","correctLightness","L0","L1","pol","L_actual","L_ideal","L_diff","t0","padding","numColors","result","dm","dd","__range__","samples","i4","end","asc","cache","gamma","nodata","left","right","inclusive","ascending","bezier","I","lab0","lab1","lab2","lab3","I0","I1","blend","bottom","top","blend_f","c0","each","normal","multiply","screen","overlay","lighten","dodge","burn","blend_1","type$k","clip_rgb$3","TWOPI$2","pow$6","sin$2","cos$3","floor$2","random","log$1","pow$7","floor$3","data","key","MAX_VALUE","sum","values","count","limits1","min_log","LOG10E","max_log","pb","pr","cluster","assignments","clusterSizes","repeat","nb_iters","centroids","j","i$4","mindist","best","j$1","dist","newCentroids","j$2","i$5","j$3","j$4","kClusters","j$5","i$6","tmpKMeansBreaks","j$6","i$7","analyze_1","sqrt$4","atan2$2","abs$1","cos$4","PI$2","scales","cool","hot","colorbrewer","OrRd","PuBu","BuPu","Oranges","BuGn","YlOrBr","YlGn","Reds","RdPu","Greens","YlGnBu","Purples","GnBu","Greys","YlOrRd","PuRd","Blues","PuBuGn","Viridis","Spectral","RdYlGn","RdBu","PiYG","PRGn","RdYlBu","BrBG","RdGy","PuOr","Set2","Accent","Set1","Set3","Dark2","Paired","Pastel2","Pastel1","i$11","list$1","key1","colorbrewer_1","average","reduce","w","first","shift","cnt","dx","dy","i2","A","ci","xyz2","A$1","cubehelix","start","rotations","lightness","dl","dh","fract","amp","cos_a","sin_a","code","contrast","l1","l2","deltaE","C","a1","b1","L2","a2","b2","sl","sc","h1","c4","sh","delC","delA","delB","v1","v2","distance","sum_sq","valid","define","amd","$eb9a509ced8bdde6$export$2e2bcd8739ae039","addHandlerStation","handler","addEventListener","tableRow","target","closest","console","$parcel$interopDefault","dataset","$d7d05b6ff978a119$export$2e2bcd8739ae039","addHandlerTable","tableIcon","table","$f50bd1f2915ed0f2$var$toggleHidden","el","classList","toggle","$f50bd1f2915ed0f2$var$controlAudio","Audio","play"],"version":3,"file":"index.54aaffd3.js.map"}